{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'section-related-products.css' | asset_url | stylesheet_tag }}

{% if section.settings.image_shape == 'blob' %}
  {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
{%- endif -%}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  {% if section.settings.enable_slider %}
    .related-products__slider {
      overflow-x: auto;
      scroll-snap-type: x mandatory;
      scrollbar-width: none;
      -ms-overflow-style: none;
    }
    .related-products__slider::-webkit-scrollbar {
      display: none;
    }
    .related-products__slider .grid {
      display: flex;
      gap: 1rem;
      flex-wrap: nowrap;
    }
    .related-products__slider .grid__item {
      flex: 0 0 {{ 100.0 | divided_by: section.settings.columns_desktop }}%;
      max-width: {{ 100.0 | divided_by: section.settings.columns_desktop }}%;
      scroll-snap-align: start;
    }
    @media screen and (max-width: 749px) {
      .related-products__slider .grid__item {
        flex: 0 0 {{ 100.0 | divided_by: section.settings.columns_mobile }}%;
        max-width: {{ 100.0 | divided_by: section.settings.columns_mobile }}%;
      }
    }

    .slider-indicator {
      position: relative;
      width: 100%;
      height: 3px;
      background-color: rgba(var(--color-foreground), 0.2);
      margin-top: 1rem;
    }
    .slider-indicator__line {
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      background-color: rgba(var(--color-foreground), 0.8);
      transition: transform 0.3s ease;
    }
  {% endif %}
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} gradient">
  <product-recommendations
    class="related-products page-width section-{{ section.id }}-padding isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    data-url="{{ routes.product_recommendations_url }}?limit={{ section.settings.products_to_show }}"
    data-section-id="{{ section.id }}"
    data-product-id="{{ product.id }}"
  >
    {% if recommendations.performed and recommendations.products_count > 0 %}
      <h2 class="related-products__heading inline-richtext {{ section.settings.heading_size }}">
        {{ section.settings.heading }}
      </h2>
      <div class="{% if section.settings.enable_slider %}related-products__slider{% endif %}">
        <ul
          class="grid product-grid grid--{{ section.settings.columns_desktop }}-col-desktop grid--{{ section.settings.columns_mobile }}-col-tablet-down"
          role="list"
        >
          {% assign skip_card_product_styles = false %}
          {% for recommendation in recommendations.products %}
            <li class="grid__item">
              {% render 'card-product',
                card_product: recommendation,
                media_aspect_ratio: section.settings.image_ratio,
                image_shape: section.settings.image_shape,
                show_secondary_image: section.settings.show_secondary_image,
                show_vendor: section.settings.show_vendor,
                show_rating: section.settings.show_rating,
                skip_styles: skip_card_product_styles
              %}
            </li>
            {%- assign skip_card_product_styles = true -%}
          {% endfor %}
        </ul>
      </div>
      {% if section.settings.enable_slider %}
        <div class="slider-indicator" aria-hidden="true">
          <div class="slider-indicator__line">&nbsp;</div>
        </div>
      {% endif %}
    {% endif %}
  </product-recommendations>
  {% if section.settings.image_shape == 'arch' %}
    {% render 'mask-arch' %}
  {%- endif -%}
</div>

{% schema %}
{
  "name": "t:sections.related-products.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.related-products.settings.paragraph__1.content"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "t:sections.related-products.settings.paragraph__1.default",
      "label": "t:sections.related-products.settings.heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "hxl",
          "label": "t:sections.all.heading_size.options__4.label"
        },
        {
          "value": "hxxl",
          "label": "t:sections.all.heading_size.options__5.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 10,
      "step": 1,
      "default": 4,
      "label": "t:sections.related-products.settings.products_to_show.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "t:sections.related-products.settings.columns_desktop.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.related-products.settings.header__2.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.related-products.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.related-products.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.related-products.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.related-products.settings.image_ratio.label"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.image_shape.options__1.label"
        },
        {
          "value": "arch",
          "label": "t:sections.all.image_shape.options__2.label"
        },
        {
          "value": "blob",
          "label": "t:sections.all.image_shape.options__3.label"
        },
        {
          "value": "chevronleft",
          "label": "t:sections.all.image_shape.options__4.label"
        },
        {
          "value": "chevronright",
          "label": "t:sections.all.image_shape.options__5.label"
        },
        {
          "value": "diamond",
          "label": "t:sections.all.image_shape.options__6.label"
        },
        {
          "value": "parallelogram",
          "label": "t:sections.all.image_shape.options__7.label"
        },
        {
          "value": "round",
          "label": "t:sections.all.image_shape.options__8.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.image_shape.label",
      "info": "t:sections.all.image_shape.info"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.related-products.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.related-products.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.related-products.settings.show_rating.label",
      "info": "t:sections.related-products.settings.show_rating.info"
    },
    {
      "type": "header",
      "content": "t:sections.related-products.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.related-products.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.related-products.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.related-products.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
    {
      "type": "checkbox",
      "id": "enable_slider",
      "default": false,
      "label": "Enable horizontal slider"
    }
  ]
}
{% endschema %}

<script>
  if ({{ section.settings.enable_slider | json }}) {
    function initializeSlider() {
      const slider = document.querySelector('.related-products__slider');
      const indicatorContainer = document.querySelector('.slider-indicator');
      const indicatorLine = document.querySelector('.slider-indicator__line');
      
      if (!slider || !indicatorContainer || !indicatorLine) {
        console.error('Slider, indicator container, or indicator line not found');
        return;
      }

      const slides = slider.querySelectorAll('.grid__item');

      if (slides.length === 0) {
        console.error('No slides found');
        return;
      }

      function updateIndicator() {
        const scrollPosition = slider.scrollLeft;
        const maxScroll = slider.scrollWidth - slider.clientWidth;
        if (maxScroll <= 0) return; // Avoid division by zero

        const scrollPercentage = (scrollPosition / maxScroll) * 100;
        const slideIndex = Math.round(scrollPercentage / (100 / (slides.length - 1)));
        const indicatorPercentage = (slideIndex / (slides.length - 1)) * 100;

        indicatorLine.style.transform = `translateX(${indicatorPercentage}%)`;

        console.log(`Slide ${slideIndex + 1} of ${slides.length} is now in view`);
      }

      // Set the width of the indicator line
      function setIndicatorWidth() {
        indicatorLine.style.width = `${100 / slides.length}%`;
      }

      // Initial setup
      setIndicatorWidth();
      updateIndicator();

      // Update on scroll
      slider.addEventListener('scroll', updateIndicator);

      // Update on window resize
      window.addEventListener('resize', () => {
        setIndicatorWidth();
        updateIndicator();
      });

      // Log total number of slides
      console.log(`Total number of slides: ${slides.length}`);

      // Update periodically to catch any missed updates
      setInterval(updateIndicator, 100);
    }

    // Create a MutationObserver instance
    const observer = new MutationObserver((mutations) => {
      for (let mutation of mutations) {
        if (mutation.type === 'childList') {
          const slider = document.querySelector('.related-products__slider');
          if (slider) {
            observer.disconnect(); // Stop observing once we find the slider
            initializeSlider();
            break;
          }
        }
      }
    });

    // Start observing the document with the configured parameters
    observer.observe(document.body, { childList: true, subtree: true });
  }
</script>
