{% schema %}
{
  "name": "Call to Action Bosies",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "default": false,
      "label": "t:sections.rich-text.settings.full_width.label"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 52
    }
  ],
  "blocks": [
    {
      "type": "image_text_block",
      "name": "Image Text Block",
      "settings": [
        {
          "type": "image_picker",
          "id": "image_one",
          "label": "First Image"
        },
        {
          "type": "image_picker",
          "id": "image_two",
          "label": "Second Image"
        },
        {
          "type": "select",
          "id": "content_type",
          "label": "Content Type",
          "options": [
            {
              "value": "text",
              "label": "Text"
            },
            {
              "value": "image",
              "label": "Image"
            }
          ],
          "default": "text"
        },
        {
          "type": "text",
          "id": "block_text",
          "label": "Text",
          "default": "This is your text here."
        },
        {
          "type": "image_picker",
          "id": "block_image",
          "label": "Content Image"
        },
        {
          "type": "url",
          "id": "block_link",
          "label": "Link URL",
          "default": "/"
        },
        {
          "type": "text",
          "id": "link_text",
          "label": "Link Text",
          "default": "View Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Call to Action Bosies",
      "category": "Custom"
    }
  ]
}
{% endschema %}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="collection-cta-container {% unless section.settings.full_width %} section-{{ section.id }}-padding color-{{ section.settings.color_scheme }}{% endunless %}">
  <div class="carousel-wrapper page-width{% if section.settings.full_width %} content-container--full-width{% endif %}">
    <div class="carousel-mask">
      <div class="carousel-track">
        {% for block in section.blocks %}
          {% if block.type == 'image_text_block' %}
            <div class="carousel-item">
              <div class="collection-cta-wrapper">
                <div class="collection-cta-image">
                  {% if block.settings.image_one %}
                    {%- if block.settings.image_one != blank -%}
                      <img
                        src="{{ block.settings.image_one | img_url: 'large' }}"
                        alt="First Image"
                        height="auto"
                        width="auto"
                      >
                    {%- else -%}
                      {{ 'image' | placeholder_svg_tag }}
                    {%- endif -%}
                  {% endif %}
                </div>
                <div class="collection-cta-text-image">
                  {% if block.settings.image_two %}
                    {% if block.settings.image_two %}
                      <img
                        src="{{ block.settings.image_two | img_url: 'large' }}"
                        alt="Second Image"
                        height="auto"
                        width="auto"
                      >
                    {%- else -%}
                      {{ 'image' | placeholder_svg_tag }}
                    {%- endif -%}
                  {% endif %}
                  {% if block.settings.content_type == 'text' %}
                    <p>{{ block.settings.block_text }}</p>
                  {% elsif block.settings.content_type == 'image' and block.settings.block_image %}
                    <img
                      src="{{ block.settings.block_image | img_url: 'large' }}"
                      alt="Second Image"
                      height="auto"
                      width="auto"
                      class="cta-image-option"
                    >
                  {% endif %}
                  {% if block.settings.block_link and block.settings.link_text %}
                    <a
                      href="{{ block.settings.block_link }}"
                      class="custom-link"
                      data-text="{{ block.settings.link_text }}"
                    >
                      <span>{{- block.settings.link_text -}}</span>
                    </a>
                  {% endif %}
                </div>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
    {% if section.blocks.size > 1 %}
      <div class="collection-cta-navigation">
        <!-- Navigation buttons -->
        <div class="collection-cta-buttons">
          <div class="carousel-btn carousel-btn-prev" id="prevBtn">
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <rect width="20" height="20"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M13.5439 18.4561L14.4561 17.5439L6.91217 10L14.4561 2.45608L13.5439 1.54392L5.08783 10L13.5439 18.4561Z" fill="#2A3B4E"/>
            </svg>
          </div>
          <div class="carousel-btn carousel-btn-next" id="nextBtn">
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <rect width="20" height="20"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M6.45609 1.54391L5.54392 2.45608L13.0878 10L5.54392 17.5439L6.45609 18.4561L14.9122 10L6.45609 1.54391Z" fill="#2A3B4E"/>
            </svg>
          </div>
        </div>
        <!-- Progress bar -->
        <div class="collection-ctw-progress-bar">
          <div class="carousel-progress-bar">
            <div class="carousel-progress-fill" id="progressFill">&nbsp;</div>
          </div>
        </div>
      </div>
    {% endif %}
  </div>
</div>

{% stylesheet %}
  /* Carousel container */
  .carousel-wrapper {
    position: relative;
    overflow: hidden;
    width: 100%;
    margin-bottom: 20px; /* Space for controls below */
  }

  .carousel-mask {
    width: 100%;
    overflow: hidden;
  }

  /* Carousel track */
  .carousel-track {
    display: flex;
    transition: transform 0.5s ease;
    width: 100%;
  }

  /* Individual carousel items */
  .carousel-item {
    flex: 0 0 100%;
    width: 100%;
    box-sizing: border-box;
  }

  /* Carousel controls container */
  .carousel-controls {
    display: flex;
    align-items: center;
    justify-content: flex-start; /* Align controls to the left */
    gap: 10px; /* Space between buttons and progress bar */
    margin-top: 10px;
  }

  /* Navigation buttons */
  .collection-cta-buttons {
    display: flex;
  }

  .carousel-btn {
    height: 20px;
  }

  /* Progress bar */
  .collection-cta-navigation {
    display: flex;
    align-items: center;
    justify-content: space-between;
    @media screen and (min-width: 750px) {
      margin: 5rem 20rem 0 20rem;
    }
  }

  .collection-ctw-progress-bar {
    flex-grow: 1;
    margin: 0 8px;
  }

  .carousel-progress-bar {
    flex-grow: 1; /* Allow progress bar to fill remaining space */
    height: 1px;
    background-color: #0000001a;
    position: relative;
  }

  .carousel-btn-prev {
    padding-right: 0.5rem;
  }

  .carousel-btn-next {
    padding-left: 0.5rem;
  }

  .carousel-progress-fill {
    min-width: 1px; /* Ensure the fill bar has a minimum width to prevent display: none */
    height: 100%;
    background-color: #000000;
    transition: width 0.3s ease;
  }

  /* Additional styling */
  .collection-cta-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    text-align: center;
    padding-bottom: 5rem;
    height: 100%;
    @media screen and (min-width: 750px) {
      flex-direction: row;
      padding-right: 3rem;
      padding-left: 3rem;
      padding-bottom: 0rem;
    }
  }

  .collection-cta-text-image p {
    font-family: var(--font-heading-family-light);
    text-align: center;
    font-size: 4.5rem;
    font-style: normal;
    font-weight: 450;
    line-height: 103.4%; /* 46.53px */
    letter-spacing: -0.9px;
    margin-right: 1rem;
    margin-left: 1rem;
  }

  .collection-cta-image {
    width: 100%;
    height: auto;
    margin-bottom: 5.2rem;
    @media screen and (min-width: 750px) {
      width: 50%;
      margin-bottom: 0;
      margin-left: 2rem;
    }
  }

  .collection-cta-image img {
    width: 100%;
    object-fit: contain;
    max-height: 400px;
    @media screen and (min-width: 750px) {
      max-height: 800px;
    }
  }

  .collection-cta-text-image {
    display: flex;
    flex-direction: column;
    align-items: center;
    @media screen and (min-width: 750px) {
      width: 50%;
    }
  }

  .cta-image-option {
    margin-top: 2.8rem;
    margin-bottom: 4rem;

    filter: brightness(0) saturate(100%);
  }

  .collection-cta-text-image img {
    width: 20rem !important;
    @media screen and (min-width: 750px) {
      width: 23rem !important;
    }
    @media screen and (min-width: 990px) {
      width: 26rem !important;
    }
    object-fit: contain;
  }

  .custom-link {
    text-transform: uppercase;
    font-size: 1.3rem;
    padding: 10px 0px;
    text-decoration: none;
    color: #2a3b4e;
    display: inline-block;
    position: relative;
    transition: all 0.1s ease;
    perspective: 1000px;
  }

  .custom-link::before,
  .custom-link::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.1s ease;
    border-bottom: 1px solid #2a3b4e;
  }

  .custom-link::before {
    transform: rotateX(0deg);
    z-index: 2;
  }

  .custom-link::after {
    transform: rotateX(-90deg) translateY(50%);
    transform-origin: bottom center;
    z-index: 1;
  }

  .custom-link:hover::before {
    transform: rotateX(90deg) translateY(-50%);
    transform-origin: top center;
  }

  .custom-link:hover::after {
    transform: rotateX(0deg) translateY(0);
  }

  .custom-link span {
    opacity: 0;
  }
{% endstylesheet %}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const track = document.querySelector('.carousel-track');
    const slides = Array.from(track.children);
    const nextButton = document.getElementById('nextBtn');
    const prevButton = document.getElementById('prevBtn');
    const progressFill = document.getElementById('progressFill');
    let currentIndex = 0;
    let startX, startY, diffX, diffY;
    let isThrottled = false;

    function updateCarousel() {
      const slideWidth = slides[0].getBoundingClientRect().width;
      track.style.transform = `translateX(${-slideWidth * currentIndex}px)`;

      // Update progress bar fill width based on the current slide index
      const progressPercentage = ((currentIndex + 1) / slides.length) * 100;
      progressFill.style.width = `${progressPercentage}%`;
    }

    function handleNextButtonClick() {
      if (isThrottled) return; // Prevent multiple rapid clicks
      isThrottled = true;

      if (currentIndex < slides.length - 1) {
        currentIndex++;
      } else {
        currentIndex = 0; // Loop back to the start
      }
      updateCarousel();

      // Throttle button clicks
      setTimeout(() => {
        isThrottled = false;
      }, 500);
    }

    function handlePrevButtonClick() {
      if (isThrottled) return; // Prevent multiple rapid clicks
      isThrottled = true;

      if (currentIndex > 0) {
        currentIndex--;
      } else {
        currentIndex = slides.length - 1; // Loop back to the end
      }
      updateCarousel();

      // Throttle button clicks
      setTimeout(() => {
        isThrottled = false;
      }, 500);
    }

    // Event listeners for buttons
    nextButton.addEventListener('click', handleNextButtonClick);
    prevButton.addEventListener('click', handlePrevButtonClick);

    // Improved touch event handling
    track.addEventListener(
      'touchstart',
      (e) => {
        startX = e.touches[0].clientX;
        startY = e.touches[0].clientY;
        diffX = 0;
        diffY = 0;
      },
      { passive: true }
    );

    track.addEventListener(
      'touchmove',
      (e) => {
        if (e.touches.length > 1) {
          return; // Ignore multi-touch
        }
        diffX = e.touches[0].clientX - startX;
        diffY = e.touches[0].clientY - startY;

        // Prevent vertical scrolling when swiping horizontally
        if (Math.abs(diffX) > Math.abs(diffY)) {
          e.preventDefault();
        }
      },
      { passive: false }
    );

    track.addEventListener('touchend', (e) => {
      const threshold = 50; // Minimum distance to trigger swipe
      const restraint = 100; // Maximum vertical distance allowed
      const allowedTime = 300; // Maximum time allowed for swipe

      if (Math.abs(diffX) > threshold && Math.abs(diffY) < restraint) {
        if (diffX > 0) {
          handlePrevButtonClick();
        } else {
          handleNextButtonClick();
        }
      }
    });

    // Update carousel when the window is resized
    window.addEventListener('resize', updateCarousel);

    // Initialize the carousel
    updateCarousel();
  });
</script>
